# Makefile generated by OCamake 
# http://tech.motion-twin.com
#.SUFFIXES : .ml .mli .mll .mly

# Mark: I have stripped this down and made it conform to bin directory output

INSTALLDIR=`ocamlc -where`
CFLAGS=
LFLAGS= -a
LIBS=
BINDIR=bin
INCLUDEOPTS=-I bin

CODE= xml_parser.ml xml_lexer.ml dtd.ml xmlParser.ml xml.ml

HEADERS= dtd.mli xml_parser.mli xml.mli xmlParser.mli

COMPILED_CODE = $(addprefix $(BINDIR)/,$(addsuffix .cmo,$(basename $(CODE))))
COMPILED_HEADERS = $(addprefix $(BINDIR)/,$(addsuffix .cmi,$(basename $(HEADERS))))

XMLLIGHTLIB = $(BINDIR)/xml-light.cma


all: $(XMLLIGHTLIB)

doc:
	mkdir doc
	ocamldoc -sort -html -d doc xml.mli dtd.mli xmlParser.mli

$(XMLLIGHTLIB): $(COMPILED_HEADERS) $(COMPILED_CODE)
	ocamlc -o $(BINDIR)/xml-light.cma $(LFLAGS) $(LIBS) $(COMPILED_CODE)


# SUFFIXES

$(BINDIR)/%.cmo: %.ml
	@[ -d $(dir $@) ] || mkdir -p $(dir $@)
	ocamlc $(INCLUDEOPTS) -g -o $@ -c $< 

$(BINDIR)/%.cmi: %.mli
	@[ -d $(dir $@) ] || mkdir -p $(dir $@)
	ocamlc $(INCLUDEOPTS) -g -o $@ -c $< 

# %.ml: %.mll
# 	if [ `df -TP $< | egrep -v "^Filesystem" | cut -d " " -f 2` = "nfs" ] ; then \
# 		# run ocamllex in /tmp, a non-NFS directory \
# 		( cp $< /tmp ; cd /tmp; ocamllex $< ) ; cp /tmp/$@ . ; \
# 	else \
# 		ocamllex $< ; \
# 	fi

xml_lexer.ml: xml_lexer.mll
	ocamllex xml_lexer.mll

xml_parser.ml: xml_parser.mli

xml_parser.mli: xml_parser.mly
	ocamlyacc -v xml_parser.mly

$(BINDIR)/xml_lexer.cmo: xml_lexer.ml
$(BINDIR)/xml_parser.cmo: xml_parser.ml
$(BINDIR)/xml_parser.cmi: xml_parser.mli

depend: $(BINDIR)/.depend.bin

$(BINDIR)/.depend.bin: $(BINDIR)/.depend
	@[ -d $(dir $@) ] || mkdir -p $(dir $@)
	sed -e 's/[_a-zA-Z0-9]*\.cm[oaix]/bin\/&/g' < $(BINDIR)/.depend > $(BINDIR)/.depend.bin

$(BINDIR)/.depend:
	@[ -d $(dir $@) ] || mkdir -p $(dir $@)
	ocamldep $(INCLUDEOPTS) *.mli *.ml > $(BINDIR)/.depend

clean:
	rm -f $(BINDIR)/* $(BINDIR)/.depend* parser.output xml_parser.mli xml_lexer.ml xml_parser.ml xml_lexer.mli *.cmo *.cmi doc/*


ifneq ($(MAKECMDGOALS),depend)
 -include $(BINDIR)/.depend.bin
endif



